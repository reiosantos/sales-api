"""
Django settings for sales_api project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
import datetime
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import dj_database_url

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'n@l4zgxc6&2n9xz46a4&oddbt@xn+ylhejp5&+m^-kc8dxc=_y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
	'django.apps',
	'django.contrib.contenttypes',
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',

	'api.apps.venue',
	'api.apps.user',
	'api.apps.common',
	'api.apps.email',
	'api.apps.company',
	'api.apps.permission',
	'api.apps.terminology',
	'api.apps.auditlogs',
	'api.apps.inventory',
	'api.apps.customers',
	'api.apps.sales',

	'rest_framework',
	'django_filters',
	'django_countries',
	'corsheaders',
	'drf_yasg',
	'import_export',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'corsheaders.middleware.CorsMiddleware',
	'django.middleware.locale.LocaleMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'api.apps.venue.middleware.VenueMiddleware',
	'api.apps.auditlogs.middleware.AuditlogMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [BASE_DIR / 'templates'],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.template.context_processors.i18n',
				'django.template.context_processors.media',
				'django.template.context_processors.static',
				'django.template.context_processors.tz',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'api.asgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {}

DB_URL = os.environ.get('DATABASE_URL', 'postgres://localhost/sales-api')

DATABASES['default'] = dj_database_url.parse(
	url=DB_URL,
	engine='django.db.backends.postgresql_psycopg2',
	conn_max_age=600,
	ssl_require=True
)

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

SITE_ID = 1

STATIC_ROOT = BASE_DIR / 'static'

# Additional locations of static files
STATICFILES_DIRS = [
	os.path.join(BASE_DIR, 'public'),
]

MEDIA_URL = '/media/'

MEDIA_ROOT = BASE_DIR / 'media'

PASSWORD_HASHERS = [
	"django.contrib.auth.hashers.PBKDF2PasswordHasher",
]

# Languages available for translation; used by locale middleware.
LANGUAGES = [
	('en-gb', 'British English'),
	('en-us', 'American English'),
	('fr', 'French')
]

AUTH_USER_MODEL = "venue.User"

AUTHENTICATION_BACKENDS = [
	'django.contrib.auth.backends.ModelBackend',
]

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = [
	'x-requested-with',
	'content-type',
	'accept',
	'origin',
	'authorization',
	'x-csrftoken',
	'user-agent',
	'accept-encoding',
	'if-modified-since',
]

FIXTURE_DIRS = [
	BASE_DIR / 'fixtures',
	BASE_DIR / 'fixtures/test',
]

FILE_UPLOAD_HANDLERS = ['django.core.files.uploadhandler.TemporaryFileUploadHandler']

FILE_UPLOAD_MAX_ATTACH_NUM = 10

# in bytes, see https://docs.djangoproject.com/en/1.8/ref/files/file/#django.core.files.File.size
FILE_UPLOAD_MAX_SIZE = 10 * 1024 * 1024  # 10MB

FILE_UPLOAD_TYPES = [
	'application/pdf', 'image/png', 'image/jpeg', 'application/msword',
	'application/vnd.ms-excel', 'application/vnd.ms-office'
]

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', '')
EMAIL_PORT = 587
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = 'ronireiosantos@gmail.com'

REST_FRAMEWORK = {
	'DEFAULT_PAGINATION_CLASS': 'api.apps.common.pagination.Pagination',
	'DEFAULT_RENDERER_CLASSES': [
		'api.apps.common.camel_case.render.CamelCaseJSONRenderer',
	],
	'DEFAULT_FILTER_BACKENDS': [
		'django_filters.rest_framework.DjangoFilterBackend',
		'api.apps.common.filter_backends.VenueFilterBackend'
	],
	'DEFAULT_PARSER_CLASSES': [
		'api.apps.common.camel_case.parser.CamelCaseJSONParser',
		'rest_framework.parsers.MultiPartParser',
		'rest_framework.parsers.FormParser',
	],
	'DEFAULT_PERMISSION_CLASSES': [
		'rest_framework.permissions.IsAuthenticated',
	],
	'DEFAULT_AUTHENTICATION_CLASSES': [
		'api.apps.user.authentication.JSONWebTokenAuthenticationPost',
	],
	'EXCEPTION_HANDLER': 'api.apps.common.exception_handler',
	'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'
}

LOGGING = {
	'version': 1,
	'disable_existing_loggers': False,
	'formatters': {
		'simple': {
			'format': '[%(asctime)s] %(levelname)s %(message)s',
			'datefmt': '%Y-%m-%d %H:%M:%S'
		},
		'verbose': {
			'format': '[%(asctime)s] %(levelname)s [%(name)s.%(funcName)s:%(lineno)d] %(message)s',
			'datefmt': '%Y-%m-%d %H:%M:%S'
		},
		'django.server': {
			'()': 'django.utils.log.ServerFormatter',
			'format': '[%(server_time)s] %(message)s',
		}
	},
	'handlers': {
		'console': {
			'level': 'DEBUG',
			'class': 'logging.StreamHandler',
			'formatter': 'simple',
		},
		'file': {
			'level': 'DEBUG',
			'class': 'logging.handlers.TimedRotatingFileHandler',
			'when': 'midnight',
			'filename': '/var/log/api/api.log',
			'formatter': 'verbose',
		},
		'request_handler': {
			'level': 'DEBUG',
			'class': 'logging.handlers.RotatingFileHandler',
			'filename': '/var/log/api/requests.log',
			'maxBytes': 1024 * 1024 * 5,  # 5MB
			'backupCount': 5,
			'formatter': 'simple'
		},
		'django.server': {
			'level': 'INFO',
			'class': 'logging.StreamHandler',
			'formatter': 'django.server',
		},
	},
	'loggers': {
		'api': {
			'handlers': ['console', 'file'],
			'level': 'DEBUG',
			'propagate': True,
		},
		'django.request': {
			'handlers': ['request_handler'],
			'level': 'DEBUG',
			'propagate': False
		},
		'django.server': {
			'handlers': ['django.server'],
			'level': 'INFO',
			'propagate': False,
		}
	}
}

JWT_AUTH = {
	'JWT_DECODE_HANDLER': 'api.apps.user.custom_jwt_decode_handler',
	'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=(60 * 60 * 24)),  # 24 hours
}

SWAGGER_SETTINGS = {
	'SECURITY_DEFINITIONS': {
		'Bearer': {
			'type': 'apiKey',
			'name': 'Authorization',
			'in': 'header'
		}
	}
}

LOGIN_URL = '/auth/login'

LOGOUT_URL = '/auth/logout'

APP_NAME = 'Sales Control'

PASSWORD_RESET_TIMEOUT = 60 * 60 * 24  # 24 hours

DEFAULT_SUPPORT_EMAIL = 'ronireiosantos@gmail.com'

DASHBOARD_URL = "/dashboard"

BASE_URL = os.getenv('BASE_URL', '')
